plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'application'
}

group = 'com.app'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def querydslVersion = "5.0.0"

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.0'

    // 스프링 부트 기본 의존성
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // DB 드라이버 (MySQL)
    runtimeOnly 'com.mysql:mysql-connector-j'
    
    // 테스트용 H2 데이터베이스
    testRuntimeOnly 'com.h2database:h2'

    // Lombok (컴파일용 + annotation 처리용)
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // 테스트 관련
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'

    // 이미지 파일 업로드
    implementation 'commons-io:commons-io:2.14.0'

    //queryDSL 의존성
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // modelmapper 의존성
    implementation 'org.modelmapper:modelmapper:2.3.9'

    // 템플릿 엔진 thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // OpenAI API 연동
    implementation 'com.theokanning.openai-gpt3-java:service:0.18.2'
    implementation 'com.theokanning.openai-gpt3-java:client:0.18.2'

    // JSON 처리
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    // 스프링 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    // 빈 유효성 검증
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // layout 사용
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // thymeleaf에서 스프링 시큐리티 사용
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // test에서 스프링 시큐리티 사용
    testImplementation 'org.springframework.security:spring-security-test'

    // jwt 토큰
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly  'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly  'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // application.yml jwt 인식
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // 파일 용량 예외 처리
    implementation 'commons-fileupload:commons-fileupload:1.5'

    // 웹소켓
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // 웹클라이언트
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
}

def querydslDir = "$buildDir/generated/sources/annotaionProcessor/java"

sourceSets {
    main {
        java {
            srcDirs += querydslDir
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean {
    delete file(querydslDir)
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'com.planty.PlantyApplication'
}